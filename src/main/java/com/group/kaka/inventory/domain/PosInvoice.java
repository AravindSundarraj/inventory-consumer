/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.group.kaka.inventory.domain;

import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;

@org.apache.avro.specific.AvroGenerated
public class PosInvoice extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -898047682073478299L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PosInvoice\",\"namespace\":\"com.group.kafka.inventory.domain\",\"fields\":[{\"name\":\"InvoiceNumber\",\"type\":[\"null\",\"string\"]},{\"name\":\"CreatedTime\",\"type\":[\"null\",\"long\"]},{\"name\":\"CustomerCardNo\",\"type\":[\"null\",\"long\"]},{\"name\":\"TotalAmount\",\"type\":[\"null\",\"double\"]},{\"name\":\"NumberOfItems\",\"type\":[\"null\",\"int\"]},{\"name\":\"PaymentMethods\",\"type\":[\"null\",\"string\"]},{\"name\":\"TaxableAmount\",\"type\":[\"null\",\"double\"]},{\"name\":\"CGST\",\"type\":[\"null\",\"double\"]},{\"name\":\"SGST\",\"type\":[\"null\",\"int\"]},{\"name\":\"CESS\",\"type\":[\"null\",\"string\"]},{\"name\":\"StoreID\",\"type\":[\"null\",\"string\"]},{\"name\":\"PosID\",\"type\":[\"null\",\"string\"]},{\"name\":\"CashierID\",\"type\":[\"null\",\"double\"]},{\"name\":\"CustomerType\",\"type\":[\"null\",\"int\"]},{\"name\":\"DeliveryType\",\"type\":[\"null\",\"string\"]},{\"name\":\"DeliveryAddress\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DeliveryAddress\",\"fields\":[{\"name\":\"AddressLine\",\"type\":[\"null\",\"string\"]},{\"name\":\"City\",\"type\":[\"null\",\"string\"]},{\"name\":\"State\",\"type\":[\"null\",\"string\"]},{\"name\":\"PinCode\",\"type\":[\"null\",\"string\"]},{\"name\":\"ContactNumber\",\"type\":[\"null\",\"string\"]}]}]},{\"name\":\"InvoiceLineItems\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"LineItem\",\"fields\":[{\"name\":\"ItemCode\",\"type\":[\"null\",\"string\"]},{\"name\":\"ItemDescription\",\"type\":[\"null\",\"string\"]},{\"name\":\"ItemPrice\",\"type\":[\"null\",\"double\"]},{\"name\":\"ItemQty\",\"type\":[\"null\",\"int\"]},{\"name\":\"TotalValue\",\"type\":[\"null\",\"string\"]}]}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<PosInvoice> ENCODER =
      new BinaryMessageEncoder<PosInvoice>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<PosInvoice> DECODER =
      new BinaryMessageDecoder<PosInvoice>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<PosInvoice> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<PosInvoice> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<PosInvoice> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<PosInvoice>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this PosInvoice to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a PosInvoice from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a PosInvoice instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static PosInvoice fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public CharSequence InvoiceNumber;
  @Deprecated public Long CreatedTime;
  @Deprecated public Long CustomerCardNo;
  @Deprecated public Double TotalAmount;
  @Deprecated public Integer NumberOfItems;
  @Deprecated public CharSequence PaymentMethods;
  @Deprecated public Double TaxableAmount;
  @Deprecated public Double CGST;
  @Deprecated public Integer SGST;
  @Deprecated public CharSequence CESS;
  @Deprecated public CharSequence StoreID;
  @Deprecated public CharSequence PosID;
  @Deprecated public Double CashierID;
  @Deprecated public Integer CustomerType;
  @Deprecated public CharSequence DeliveryType;
  @Deprecated public com.group.kaka.inventory.domain.DeliveryAddress DeliveryAddress;
  @Deprecated public java.util.List<LineItem> InvoiceLineItems;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public PosInvoice() {}

  /**
   * All-args constructor.
   * @param InvoiceNumber The new value for InvoiceNumber
   * @param CreatedTime The new value for CreatedTime
   * @param CustomerCardNo The new value for CustomerCardNo
   * @param TotalAmount The new value for TotalAmount
   * @param NumberOfItems The new value for NumberOfItems
   * @param PaymentMethods The new value for PaymentMethods
   * @param TaxableAmount The new value for TaxableAmount
   * @param CGST The new value for CGST
   * @param SGST The new value for SGST
   * @param CESS The new value for CESS
   * @param StoreID The new value for StoreID
   * @param PosID The new value for PosID
   * @param CashierID The new value for CashierID
   * @param CustomerType The new value for CustomerType
   * @param DeliveryType The new value for DeliveryType
   * @param DeliveryAddress The new value for DeliveryAddress
   * @param InvoiceLineItems The new value for InvoiceLineItems
   */
  public PosInvoice(CharSequence InvoiceNumber, Long CreatedTime, Long CustomerCardNo, Double TotalAmount, Integer NumberOfItems, CharSequence PaymentMethods, Double TaxableAmount, Double CGST, Integer SGST, CharSequence CESS, CharSequence StoreID, CharSequence PosID, Double CashierID, Integer CustomerType, CharSequence DeliveryType, com.group.kaka.inventory.domain.DeliveryAddress DeliveryAddress, java.util.List<LineItem> InvoiceLineItems) {
    this.InvoiceNumber = InvoiceNumber;
    this.CreatedTime = CreatedTime;
    this.CustomerCardNo = CustomerCardNo;
    this.TotalAmount = TotalAmount;
    this.NumberOfItems = NumberOfItems;
    this.PaymentMethods = PaymentMethods;
    this.TaxableAmount = TaxableAmount;
    this.CGST = CGST;
    this.SGST = SGST;
    this.CESS = CESS;
    this.StoreID = StoreID;
    this.PosID = PosID;
    this.CashierID = CashierID;
    this.CustomerType = CustomerType;
    this.DeliveryType = DeliveryType;
    this.DeliveryAddress = DeliveryAddress;
    this.InvoiceLineItems = InvoiceLineItems;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return InvoiceNumber;
    case 1: return CreatedTime;
    case 2: return CustomerCardNo;
    case 3: return TotalAmount;
    case 4: return NumberOfItems;
    case 5: return PaymentMethods;
    case 6: return TaxableAmount;
    case 7: return CGST;
    case 8: return SGST;
    case 9: return CESS;
    case 10: return StoreID;
    case 11: return PosID;
    case 12: return CashierID;
    case 13: return CustomerType;
    case 14: return DeliveryType;
    case 15: return DeliveryAddress;
    case 16: return InvoiceLineItems;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: InvoiceNumber = (CharSequence)value$; break;
    case 1: CreatedTime = (Long)value$; break;
    case 2: CustomerCardNo = (Long)value$; break;
    case 3: TotalAmount = (Double)value$; break;
    case 4: NumberOfItems = (Integer)value$; break;
    case 5: PaymentMethods = (CharSequence)value$; break;
    case 6: TaxableAmount = (Double)value$; break;
    case 7: CGST = (Double)value$; break;
    case 8: SGST = (Integer)value$; break;
    case 9: CESS = (CharSequence)value$; break;
    case 10: StoreID = (CharSequence)value$; break;
    case 11: PosID = (CharSequence)value$; break;
    case 12: CashierID = (Double)value$; break;
    case 13: CustomerType = (Integer)value$; break;
    case 14: DeliveryType = (CharSequence)value$; break;
    case 15: DeliveryAddress = (com.group.kaka.inventory.domain.DeliveryAddress)value$; break;
    case 16: InvoiceLineItems = (java.util.List<LineItem>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'InvoiceNumber' field.
   * @return The value of the 'InvoiceNumber' field.
   */
  public CharSequence getInvoiceNumber() {
    return InvoiceNumber;
  }


  /**
   * Sets the value of the 'InvoiceNumber' field.
   * @param value the value to set.
   */
  public void setInvoiceNumber(CharSequence value) {
    this.InvoiceNumber = value;
  }

  /**
   * Gets the value of the 'CreatedTime' field.
   * @return The value of the 'CreatedTime' field.
   */
  public Long getCreatedTime() {
    return CreatedTime;
  }


  /**
   * Sets the value of the 'CreatedTime' field.
   * @param value the value to set.
   */
  public void setCreatedTime(Long value) {
    this.CreatedTime = value;
  }

  /**
   * Gets the value of the 'CustomerCardNo' field.
   * @return The value of the 'CustomerCardNo' field.
   */
  public Long getCustomerCardNo() {
    return CustomerCardNo;
  }


  /**
   * Sets the value of the 'CustomerCardNo' field.
   * @param value the value to set.
   */
  public void setCustomerCardNo(Long value) {
    this.CustomerCardNo = value;
  }

  /**
   * Gets the value of the 'TotalAmount' field.
   * @return The value of the 'TotalAmount' field.
   */
  public Double getTotalAmount() {
    return TotalAmount;
  }


  /**
   * Sets the value of the 'TotalAmount' field.
   * @param value the value to set.
   */
  public void setTotalAmount(Double value) {
    this.TotalAmount = value;
  }

  /**
   * Gets the value of the 'NumberOfItems' field.
   * @return The value of the 'NumberOfItems' field.
   */
  public Integer getNumberOfItems() {
    return NumberOfItems;
  }


  /**
   * Sets the value of the 'NumberOfItems' field.
   * @param value the value to set.
   */
  public void setNumberOfItems(Integer value) {
    this.NumberOfItems = value;
  }

  /**
   * Gets the value of the 'PaymentMethods' field.
   * @return The value of the 'PaymentMethods' field.
   */
  public CharSequence getPaymentMethods() {
    return PaymentMethods;
  }


  /**
   * Sets the value of the 'PaymentMethods' field.
   * @param value the value to set.
   */
  public void setPaymentMethods(CharSequence value) {
    this.PaymentMethods = value;
  }

  /**
   * Gets the value of the 'TaxableAmount' field.
   * @return The value of the 'TaxableAmount' field.
   */
  public Double getTaxableAmount() {
    return TaxableAmount;
  }


  /**
   * Sets the value of the 'TaxableAmount' field.
   * @param value the value to set.
   */
  public void setTaxableAmount(Double value) {
    this.TaxableAmount = value;
  }

  /**
   * Gets the value of the 'CGST' field.
   * @return The value of the 'CGST' field.
   */
  public Double getCGST() {
    return CGST;
  }


  /**
   * Sets the value of the 'CGST' field.
   * @param value the value to set.
   */
  public void setCGST(Double value) {
    this.CGST = value;
  }

  /**
   * Gets the value of the 'SGST' field.
   * @return The value of the 'SGST' field.
   */
  public Integer getSGST() {
    return SGST;
  }


  /**
   * Sets the value of the 'SGST' field.
   * @param value the value to set.
   */
  public void setSGST(Integer value) {
    this.SGST = value;
  }

  /**
   * Gets the value of the 'CESS' field.
   * @return The value of the 'CESS' field.
   */
  public CharSequence getCESS() {
    return CESS;
  }


  /**
   * Sets the value of the 'CESS' field.
   * @param value the value to set.
   */
  public void setCESS(CharSequence value) {
    this.CESS = value;
  }

  /**
   * Gets the value of the 'StoreID' field.
   * @return The value of the 'StoreID' field.
   */
  public CharSequence getStoreID() {
    return StoreID;
  }


  /**
   * Sets the value of the 'StoreID' field.
   * @param value the value to set.
   */
  public void setStoreID(CharSequence value) {
    this.StoreID = value;
  }

  /**
   * Gets the value of the 'PosID' field.
   * @return The value of the 'PosID' field.
   */
  public CharSequence getPosID() {
    return PosID;
  }


  /**
   * Sets the value of the 'PosID' field.
   * @param value the value to set.
   */
  public void setPosID(CharSequence value) {
    this.PosID = value;
  }

  /**
   * Gets the value of the 'CashierID' field.
   * @return The value of the 'CashierID' field.
   */
  public Double getCashierID() {
    return CashierID;
  }


  /**
   * Sets the value of the 'CashierID' field.
   * @param value the value to set.
   */
  public void setCashierID(Double value) {
    this.CashierID = value;
  }

  /**
   * Gets the value of the 'CustomerType' field.
   * @return The value of the 'CustomerType' field.
   */
  public Integer getCustomerType() {
    return CustomerType;
  }


  /**
   * Sets the value of the 'CustomerType' field.
   * @param value the value to set.
   */
  public void setCustomerType(Integer value) {
    this.CustomerType = value;
  }

  /**
   * Gets the value of the 'DeliveryType' field.
   * @return The value of the 'DeliveryType' field.
   */
  public CharSequence getDeliveryType() {
    return DeliveryType;
  }


  /**
   * Sets the value of the 'DeliveryType' field.
   * @param value the value to set.
   */
  public void setDeliveryType(CharSequence value) {
    this.DeliveryType = value;
  }

  /**
   * Gets the value of the 'DeliveryAddress' field.
   * @return The value of the 'DeliveryAddress' field.
   */
  public com.group.kaka.inventory.domain.DeliveryAddress getDeliveryAddress() {
    return DeliveryAddress;
  }


  /**
   * Sets the value of the 'DeliveryAddress' field.
   * @param value the value to set.
   */
  public void setDeliveryAddress(com.group.kaka.inventory.domain.DeliveryAddress value) {
    this.DeliveryAddress = value;
  }

  /**
   * Gets the value of the 'InvoiceLineItems' field.
   * @return The value of the 'InvoiceLineItems' field.
   */
  public java.util.List<LineItem> getInvoiceLineItems() {
    return InvoiceLineItems;
  }


  /**
   * Sets the value of the 'InvoiceLineItems' field.
   * @param value the value to set.
   */
  public void setInvoiceLineItems(java.util.List<LineItem> value) {
    this.InvoiceLineItems = value;
  }

  /**
   * Creates a new PosInvoice RecordBuilder.
   * @return A new PosInvoice RecordBuilder
   */
  public static Builder newBuilder() {
    return new Builder();
  }

  /**
   * Creates a new PosInvoice RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new PosInvoice RecordBuilder
   */
  public static Builder newBuilder(Builder other) {
    if (other == null) {
      return new Builder();
    } else {
      return new Builder(other);
    }
  }

  /**
   * Creates a new PosInvoice RecordBuilder by copying an existing PosInvoice instance.
   * @param other The existing instance to copy.
   * @return A new PosInvoice RecordBuilder
   */
  public static Builder newBuilder(PosInvoice other) {
    if (other == null) {
      return new Builder();
    } else {
      return new Builder(other);
    }
  }

  /**
   * RecordBuilder for PosInvoice instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PosInvoice>
    implements org.apache.avro.data.RecordBuilder<PosInvoice> {

    private CharSequence InvoiceNumber;
    private Long CreatedTime;
    private Long CustomerCardNo;
    private Double TotalAmount;
    private Integer NumberOfItems;
    private CharSequence PaymentMethods;
    private Double TaxableAmount;
    private Double CGST;
    private Integer SGST;
    private CharSequence CESS;
    private CharSequence StoreID;
    private CharSequence PosID;
    private Double CashierID;
    private Integer CustomerType;
    private CharSequence DeliveryType;
    private com.group.kaka.inventory.domain.DeliveryAddress DeliveryAddress;
    private com.group.kaka.inventory.domain.DeliveryAddress.Builder DeliveryAddressBuilder;
    private java.util.List<LineItem> InvoiceLineItems;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.InvoiceNumber)) {
        this.InvoiceNumber = data().deepCopy(fields()[0].schema(), other.InvoiceNumber);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.CreatedTime)) {
        this.CreatedTime = data().deepCopy(fields()[1].schema(), other.CreatedTime);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.CustomerCardNo)) {
        this.CustomerCardNo = data().deepCopy(fields()[2].schema(), other.CustomerCardNo);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.TotalAmount)) {
        this.TotalAmount = data().deepCopy(fields()[3].schema(), other.TotalAmount);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.NumberOfItems)) {
        this.NumberOfItems = data().deepCopy(fields()[4].schema(), other.NumberOfItems);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.PaymentMethods)) {
        this.PaymentMethods = data().deepCopy(fields()[5].schema(), other.PaymentMethods);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.TaxableAmount)) {
        this.TaxableAmount = data().deepCopy(fields()[6].schema(), other.TaxableAmount);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.CGST)) {
        this.CGST = data().deepCopy(fields()[7].schema(), other.CGST);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.SGST)) {
        this.SGST = data().deepCopy(fields()[8].schema(), other.SGST);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.CESS)) {
        this.CESS = data().deepCopy(fields()[9].schema(), other.CESS);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.StoreID)) {
        this.StoreID = data().deepCopy(fields()[10].schema(), other.StoreID);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.PosID)) {
        this.PosID = data().deepCopy(fields()[11].schema(), other.PosID);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.CashierID)) {
        this.CashierID = data().deepCopy(fields()[12].schema(), other.CashierID);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.CustomerType)) {
        this.CustomerType = data().deepCopy(fields()[13].schema(), other.CustomerType);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.DeliveryType)) {
        this.DeliveryType = data().deepCopy(fields()[14].schema(), other.DeliveryType);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.DeliveryAddress)) {
        this.DeliveryAddress = data().deepCopy(fields()[15].schema(), other.DeliveryAddress);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (other.hasDeliveryAddressBuilder()) {
        this.DeliveryAddressBuilder = com.group.kaka.inventory.domain.DeliveryAddress.newBuilder(other.getDeliveryAddressBuilder());
      }
      if (isValidValue(fields()[16], other.InvoiceLineItems)) {
        this.InvoiceLineItems = data().deepCopy(fields()[16].schema(), other.InvoiceLineItems);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
    }

    /**
     * Creates a Builder by copying an existing PosInvoice instance
     * @param other The existing instance to copy.
     */
    private Builder(PosInvoice other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.InvoiceNumber)) {
        this.InvoiceNumber = data().deepCopy(fields()[0].schema(), other.InvoiceNumber);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.CreatedTime)) {
        this.CreatedTime = data().deepCopy(fields()[1].schema(), other.CreatedTime);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.CustomerCardNo)) {
        this.CustomerCardNo = data().deepCopy(fields()[2].schema(), other.CustomerCardNo);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.TotalAmount)) {
        this.TotalAmount = data().deepCopy(fields()[3].schema(), other.TotalAmount);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.NumberOfItems)) {
        this.NumberOfItems = data().deepCopy(fields()[4].schema(), other.NumberOfItems);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.PaymentMethods)) {
        this.PaymentMethods = data().deepCopy(fields()[5].schema(), other.PaymentMethods);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.TaxableAmount)) {
        this.TaxableAmount = data().deepCopy(fields()[6].schema(), other.TaxableAmount);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.CGST)) {
        this.CGST = data().deepCopy(fields()[7].schema(), other.CGST);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.SGST)) {
        this.SGST = data().deepCopy(fields()[8].schema(), other.SGST);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.CESS)) {
        this.CESS = data().deepCopy(fields()[9].schema(), other.CESS);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.StoreID)) {
        this.StoreID = data().deepCopy(fields()[10].schema(), other.StoreID);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.PosID)) {
        this.PosID = data().deepCopy(fields()[11].schema(), other.PosID);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.CashierID)) {
        this.CashierID = data().deepCopy(fields()[12].schema(), other.CashierID);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.CustomerType)) {
        this.CustomerType = data().deepCopy(fields()[13].schema(), other.CustomerType);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.DeliveryType)) {
        this.DeliveryType = data().deepCopy(fields()[14].schema(), other.DeliveryType);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.DeliveryAddress)) {
        this.DeliveryAddress = data().deepCopy(fields()[15].schema(), other.DeliveryAddress);
        fieldSetFlags()[15] = true;
      }
      this.DeliveryAddressBuilder = null;
      if (isValidValue(fields()[16], other.InvoiceLineItems)) {
        this.InvoiceLineItems = data().deepCopy(fields()[16].schema(), other.InvoiceLineItems);
        fieldSetFlags()[16] = true;
      }
    }

    /**
      * Gets the value of the 'InvoiceNumber' field.
      * @return The value.
      */
    public CharSequence getInvoiceNumber() {
      return InvoiceNumber;
    }


    /**
      * Sets the value of the 'InvoiceNumber' field.
      * @param value The value of 'InvoiceNumber'.
      * @return This builder.
      */
    public Builder setInvoiceNumber(CharSequence value) {
      validate(fields()[0], value);
      this.InvoiceNumber = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'InvoiceNumber' field has been set.
      * @return True if the 'InvoiceNumber' field has been set, false otherwise.
      */
    public boolean hasInvoiceNumber() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'InvoiceNumber' field.
      * @return This builder.
      */
    public Builder clearInvoiceNumber() {
      InvoiceNumber = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'CreatedTime' field.
      * @return The value.
      */
    public Long getCreatedTime() {
      return CreatedTime;
    }


    /**
      * Sets the value of the 'CreatedTime' field.
      * @param value The value of 'CreatedTime'.
      * @return This builder.
      */
    public Builder setCreatedTime(Long value) {
      validate(fields()[1], value);
      this.CreatedTime = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'CreatedTime' field has been set.
      * @return True if the 'CreatedTime' field has been set, false otherwise.
      */
    public boolean hasCreatedTime() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'CreatedTime' field.
      * @return This builder.
      */
    public Builder clearCreatedTime() {
      CreatedTime = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'CustomerCardNo' field.
      * @return The value.
      */
    public Long getCustomerCardNo() {
      return CustomerCardNo;
    }


    /**
      * Sets the value of the 'CustomerCardNo' field.
      * @param value The value of 'CustomerCardNo'.
      * @return This builder.
      */
    public Builder setCustomerCardNo(Long value) {
      validate(fields()[2], value);
      this.CustomerCardNo = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'CustomerCardNo' field has been set.
      * @return True if the 'CustomerCardNo' field has been set, false otherwise.
      */
    public boolean hasCustomerCardNo() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'CustomerCardNo' field.
      * @return This builder.
      */
    public Builder clearCustomerCardNo() {
      CustomerCardNo = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'TotalAmount' field.
      * @return The value.
      */
    public Double getTotalAmount() {
      return TotalAmount;
    }


    /**
      * Sets the value of the 'TotalAmount' field.
      * @param value The value of 'TotalAmount'.
      * @return This builder.
      */
    public Builder setTotalAmount(Double value) {
      validate(fields()[3], value);
      this.TotalAmount = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'TotalAmount' field has been set.
      * @return True if the 'TotalAmount' field has been set, false otherwise.
      */
    public boolean hasTotalAmount() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'TotalAmount' field.
      * @return This builder.
      */
    public Builder clearTotalAmount() {
      TotalAmount = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'NumberOfItems' field.
      * @return The value.
      */
    public Integer getNumberOfItems() {
      return NumberOfItems;
    }


    /**
      * Sets the value of the 'NumberOfItems' field.
      * @param value The value of 'NumberOfItems'.
      * @return This builder.
      */
    public Builder setNumberOfItems(Integer value) {
      validate(fields()[4], value);
      this.NumberOfItems = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'NumberOfItems' field has been set.
      * @return True if the 'NumberOfItems' field has been set, false otherwise.
      */
    public boolean hasNumberOfItems() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'NumberOfItems' field.
      * @return This builder.
      */
    public Builder clearNumberOfItems() {
      NumberOfItems = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'PaymentMethods' field.
      * @return The value.
      */
    public CharSequence getPaymentMethods() {
      return PaymentMethods;
    }


    /**
      * Sets the value of the 'PaymentMethods' field.
      * @param value The value of 'PaymentMethods'.
      * @return This builder.
      */
    public Builder setPaymentMethods(CharSequence value) {
      validate(fields()[5], value);
      this.PaymentMethods = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'PaymentMethods' field has been set.
      * @return True if the 'PaymentMethods' field has been set, false otherwise.
      */
    public boolean hasPaymentMethods() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'PaymentMethods' field.
      * @return This builder.
      */
    public Builder clearPaymentMethods() {
      PaymentMethods = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'TaxableAmount' field.
      * @return The value.
      */
    public Double getTaxableAmount() {
      return TaxableAmount;
    }


    /**
      * Sets the value of the 'TaxableAmount' field.
      * @param value The value of 'TaxableAmount'.
      * @return This builder.
      */
    public Builder setTaxableAmount(Double value) {
      validate(fields()[6], value);
      this.TaxableAmount = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'TaxableAmount' field has been set.
      * @return True if the 'TaxableAmount' field has been set, false otherwise.
      */
    public boolean hasTaxableAmount() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'TaxableAmount' field.
      * @return This builder.
      */
    public Builder clearTaxableAmount() {
      TaxableAmount = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'CGST' field.
      * @return The value.
      */
    public Double getCGST() {
      return CGST;
    }


    /**
      * Sets the value of the 'CGST' field.
      * @param value The value of 'CGST'.
      * @return This builder.
      */
    public Builder setCGST(Double value) {
      validate(fields()[7], value);
      this.CGST = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'CGST' field has been set.
      * @return True if the 'CGST' field has been set, false otherwise.
      */
    public boolean hasCGST() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'CGST' field.
      * @return This builder.
      */
    public Builder clearCGST() {
      CGST = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'SGST' field.
      * @return The value.
      */
    public Integer getSGST() {
      return SGST;
    }


    /**
      * Sets the value of the 'SGST' field.
      * @param value The value of 'SGST'.
      * @return This builder.
      */
    public Builder setSGST(Integer value) {
      validate(fields()[8], value);
      this.SGST = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'SGST' field has been set.
      * @return True if the 'SGST' field has been set, false otherwise.
      */
    public boolean hasSGST() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'SGST' field.
      * @return This builder.
      */
    public Builder clearSGST() {
      SGST = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'CESS' field.
      * @return The value.
      */
    public CharSequence getCESS() {
      return CESS;
    }


    /**
      * Sets the value of the 'CESS' field.
      * @param value The value of 'CESS'.
      * @return This builder.
      */
    public Builder setCESS(CharSequence value) {
      validate(fields()[9], value);
      this.CESS = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'CESS' field has been set.
      * @return True if the 'CESS' field has been set, false otherwise.
      */
    public boolean hasCESS() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'CESS' field.
      * @return This builder.
      */
    public Builder clearCESS() {
      CESS = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'StoreID' field.
      * @return The value.
      */
    public CharSequence getStoreID() {
      return StoreID;
    }


    /**
      * Sets the value of the 'StoreID' field.
      * @param value The value of 'StoreID'.
      * @return This builder.
      */
    public Builder setStoreID(CharSequence value) {
      validate(fields()[10], value);
      this.StoreID = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'StoreID' field has been set.
      * @return True if the 'StoreID' field has been set, false otherwise.
      */
    public boolean hasStoreID() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'StoreID' field.
      * @return This builder.
      */
    public Builder clearStoreID() {
      StoreID = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'PosID' field.
      * @return The value.
      */
    public CharSequence getPosID() {
      return PosID;
    }


    /**
      * Sets the value of the 'PosID' field.
      * @param value The value of 'PosID'.
      * @return This builder.
      */
    public Builder setPosID(CharSequence value) {
      validate(fields()[11], value);
      this.PosID = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'PosID' field has been set.
      * @return True if the 'PosID' field has been set, false otherwise.
      */
    public boolean hasPosID() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'PosID' field.
      * @return This builder.
      */
    public Builder clearPosID() {
      PosID = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'CashierID' field.
      * @return The value.
      */
    public Double getCashierID() {
      return CashierID;
    }


    /**
      * Sets the value of the 'CashierID' field.
      * @param value The value of 'CashierID'.
      * @return This builder.
      */
    public Builder setCashierID(Double value) {
      validate(fields()[12], value);
      this.CashierID = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'CashierID' field has been set.
      * @return True if the 'CashierID' field has been set, false otherwise.
      */
    public boolean hasCashierID() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'CashierID' field.
      * @return This builder.
      */
    public Builder clearCashierID() {
      CashierID = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'CustomerType' field.
      * @return The value.
      */
    public Integer getCustomerType() {
      return CustomerType;
    }


    /**
      * Sets the value of the 'CustomerType' field.
      * @param value The value of 'CustomerType'.
      * @return This builder.
      */
    public Builder setCustomerType(Integer value) {
      validate(fields()[13], value);
      this.CustomerType = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'CustomerType' field has been set.
      * @return True if the 'CustomerType' field has been set, false otherwise.
      */
    public boolean hasCustomerType() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'CustomerType' field.
      * @return This builder.
      */
    public Builder clearCustomerType() {
      CustomerType = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'DeliveryType' field.
      * @return The value.
      */
    public CharSequence getDeliveryType() {
      return DeliveryType;
    }


    /**
      * Sets the value of the 'DeliveryType' field.
      * @param value The value of 'DeliveryType'.
      * @return This builder.
      */
    public Builder setDeliveryType(CharSequence value) {
      validate(fields()[14], value);
      this.DeliveryType = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'DeliveryType' field has been set.
      * @return True if the 'DeliveryType' field has been set, false otherwise.
      */
    public boolean hasDeliveryType() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'DeliveryType' field.
      * @return This builder.
      */
    public Builder clearDeliveryType() {
      DeliveryType = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'DeliveryAddress' field.
      * @return The value.
      */
    public com.group.kaka.inventory.domain.DeliveryAddress getDeliveryAddress() {
      return DeliveryAddress;
    }


    /**
      * Sets the value of the 'DeliveryAddress' field.
      * @param value The value of 'DeliveryAddress'.
      * @return This builder.
      */
    public Builder setDeliveryAddress(com.group.kaka.inventory.domain.DeliveryAddress value) {
      validate(fields()[15], value);
      this.DeliveryAddressBuilder = null;
      this.DeliveryAddress = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'DeliveryAddress' field has been set.
      * @return True if the 'DeliveryAddress' field has been set, false otherwise.
      */
    public boolean hasDeliveryAddress() {
      return fieldSetFlags()[15];
    }

    /**
     * Gets the Builder instance for the 'DeliveryAddress' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.group.kaka.inventory.domain.DeliveryAddress.Builder getDeliveryAddressBuilder() {
      if (DeliveryAddressBuilder == null) {
        if (hasDeliveryAddress()) {
          setDeliveryAddressBuilder(com.group.kaka.inventory.domain.DeliveryAddress.newBuilder(DeliveryAddress));
        } else {
          setDeliveryAddressBuilder(com.group.kaka.inventory.domain.DeliveryAddress.newBuilder());
        }
      }
      return DeliveryAddressBuilder;
    }

    /**
     * Sets the Builder instance for the 'DeliveryAddress' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public Builder setDeliveryAddressBuilder(com.group.kaka.inventory.domain.DeliveryAddress.Builder value) {
      clearDeliveryAddress();
      DeliveryAddressBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'DeliveryAddress' field has an active Builder instance
     * @return True if the 'DeliveryAddress' field has an active Builder instance
     */
    public boolean hasDeliveryAddressBuilder() {
      return DeliveryAddressBuilder != null;
    }

    /**
      * Clears the value of the 'DeliveryAddress' field.
      * @return This builder.
      */
    public Builder clearDeliveryAddress() {
      DeliveryAddress = null;
      DeliveryAddressBuilder = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'InvoiceLineItems' field.
      * @return The value.
      */
    public java.util.List<LineItem> getInvoiceLineItems() {
      return InvoiceLineItems;
    }


    /**
      * Sets the value of the 'InvoiceLineItems' field.
      * @param value The value of 'InvoiceLineItems'.
      * @return This builder.
      */
    public Builder setInvoiceLineItems(java.util.List<LineItem> value) {
      validate(fields()[16], value);
      this.InvoiceLineItems = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'InvoiceLineItems' field has been set.
      * @return True if the 'InvoiceLineItems' field has been set, false otherwise.
      */
    public boolean hasInvoiceLineItems() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'InvoiceLineItems' field.
      * @return This builder.
      */
    public Builder clearInvoiceLineItems() {
      InvoiceLineItems = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public PosInvoice build() {
      try {
        PosInvoice record = new PosInvoice();
        record.InvoiceNumber = fieldSetFlags()[0] ? this.InvoiceNumber : (CharSequence) defaultValue(fields()[0]);
        record.CreatedTime = fieldSetFlags()[1] ? this.CreatedTime : (Long) defaultValue(fields()[1]);
        record.CustomerCardNo = fieldSetFlags()[2] ? this.CustomerCardNo : (Long) defaultValue(fields()[2]);
        record.TotalAmount = fieldSetFlags()[3] ? this.TotalAmount : (Double) defaultValue(fields()[3]);
        record.NumberOfItems = fieldSetFlags()[4] ? this.NumberOfItems : (Integer) defaultValue(fields()[4]);
        record.PaymentMethods = fieldSetFlags()[5] ? this.PaymentMethods : (CharSequence) defaultValue(fields()[5]);
        record.TaxableAmount = fieldSetFlags()[6] ? this.TaxableAmount : (Double) defaultValue(fields()[6]);
        record.CGST = fieldSetFlags()[7] ? this.CGST : (Double) defaultValue(fields()[7]);
        record.SGST = fieldSetFlags()[8] ? this.SGST : (Integer) defaultValue(fields()[8]);
        record.CESS = fieldSetFlags()[9] ? this.CESS : (CharSequence) defaultValue(fields()[9]);
        record.StoreID = fieldSetFlags()[10] ? this.StoreID : (CharSequence) defaultValue(fields()[10]);
        record.PosID = fieldSetFlags()[11] ? this.PosID : (CharSequence) defaultValue(fields()[11]);
        record.CashierID = fieldSetFlags()[12] ? this.CashierID : (Double) defaultValue(fields()[12]);
        record.CustomerType = fieldSetFlags()[13] ? this.CustomerType : (Integer) defaultValue(fields()[13]);
        record.DeliveryType = fieldSetFlags()[14] ? this.DeliveryType : (CharSequence) defaultValue(fields()[14]);
        if (DeliveryAddressBuilder != null) {
          try {
            record.DeliveryAddress = this.DeliveryAddressBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("DeliveryAddress"));
            throw e;
          }
        } else {
          record.DeliveryAddress = fieldSetFlags()[15] ? this.DeliveryAddress : (com.group.kaka.inventory.domain.DeliveryAddress) defaultValue(fields()[15]);
        }
        record.InvoiceLineItems = fieldSetFlags()[16] ? this.InvoiceLineItems : (java.util.List<LineItem>) defaultValue(fields()[16]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<PosInvoice>
    WRITER$ = (org.apache.avro.io.DatumWriter<PosInvoice>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<PosInvoice>
    READER$ = (org.apache.avro.io.DatumReader<PosInvoice>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.InvoiceNumber == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.InvoiceNumber);
    }

    if (this.CreatedTime == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.CreatedTime);
    }

    if (this.CustomerCardNo == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.CustomerCardNo);
    }

    if (this.TotalAmount == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeDouble(this.TotalAmount);
    }

    if (this.NumberOfItems == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.NumberOfItems);
    }

    if (this.PaymentMethods == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.PaymentMethods);
    }

    if (this.TaxableAmount == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeDouble(this.TaxableAmount);
    }

    if (this.CGST == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeDouble(this.CGST);
    }

    if (this.SGST == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.SGST);
    }

    if (this.CESS == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.CESS);
    }

    if (this.StoreID == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.StoreID);
    }

    if (this.PosID == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.PosID);
    }

    if (this.CashierID == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeDouble(this.CashierID);
    }

    if (this.CustomerType == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.CustomerType);
    }

    if (this.DeliveryType == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.DeliveryType);
    }

    if (this.DeliveryAddress == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.DeliveryAddress.customEncode(out);
    }

    long size0 = this.InvoiceLineItems.size();
    out.writeArrayStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (LineItem e0: this.InvoiceLineItems) {
      actualSize0++;
      out.startItem();
      e0.customEncode(out);
    }
    out.writeArrayEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.InvoiceNumber = null;
      } else {
        this.InvoiceNumber = in.readString(this.InvoiceNumber instanceof Utf8 ? (Utf8)this.InvoiceNumber : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CreatedTime = null;
      } else {
        this.CreatedTime = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CustomerCardNo = null;
      } else {
        this.CustomerCardNo = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.TotalAmount = null;
      } else {
        this.TotalAmount = in.readDouble();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.NumberOfItems = null;
      } else {
        this.NumberOfItems = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.PaymentMethods = null;
      } else {
        this.PaymentMethods = in.readString(this.PaymentMethods instanceof Utf8 ? (Utf8)this.PaymentMethods : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.TaxableAmount = null;
      } else {
        this.TaxableAmount = in.readDouble();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CGST = null;
      } else {
        this.CGST = in.readDouble();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SGST = null;
      } else {
        this.SGST = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CESS = null;
      } else {
        this.CESS = in.readString(this.CESS instanceof Utf8 ? (Utf8)this.CESS : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.StoreID = null;
      } else {
        this.StoreID = in.readString(this.StoreID instanceof Utf8 ? (Utf8)this.StoreID : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.PosID = null;
      } else {
        this.PosID = in.readString(this.PosID instanceof Utf8 ? (Utf8)this.PosID : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CashierID = null;
      } else {
        this.CashierID = in.readDouble();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CustomerType = null;
      } else {
        this.CustomerType = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.DeliveryType = null;
      } else {
        this.DeliveryType = in.readString(this.DeliveryType instanceof Utf8 ? (Utf8)this.DeliveryType : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.DeliveryAddress = null;
      } else {
        if (this.DeliveryAddress == null) {
          this.DeliveryAddress = new DeliveryAddress();
        }
        this.DeliveryAddress.customDecode(in);
      }

      long size0 = in.readArrayStart();
      java.util.List<LineItem> a0 = this.InvoiceLineItems;
      if (a0 == null) {
        a0 = new SpecificData.Array<LineItem>((int)size0, SCHEMA$.getField("InvoiceLineItems").schema());
        this.InvoiceLineItems = a0;
      } else a0.clear();
      SpecificData.Array<LineItem> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<LineItem>)a0 : null);
      for ( ; 0 < size0; size0 = in.arrayNext()) {
        for ( ; size0 != 0; size0--) {
          LineItem e0 = (ga0 != null ? ga0.peek() : null);
          if (e0 == null) {
            e0 = new LineItem();
          }
          e0.customDecode(in);
          a0.add(e0);
        }
      }

    } else {
      for (int i = 0; i < 17; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.InvoiceNumber = null;
          } else {
            this.InvoiceNumber = in.readString(this.InvoiceNumber instanceof Utf8 ? (Utf8)this.InvoiceNumber : null);
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CreatedTime = null;
          } else {
            this.CreatedTime = in.readLong();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CustomerCardNo = null;
          } else {
            this.CustomerCardNo = in.readLong();
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.TotalAmount = null;
          } else {
            this.TotalAmount = in.readDouble();
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.NumberOfItems = null;
          } else {
            this.NumberOfItems = in.readInt();
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.PaymentMethods = null;
          } else {
            this.PaymentMethods = in.readString(this.PaymentMethods instanceof Utf8 ? (Utf8)this.PaymentMethods : null);
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.TaxableAmount = null;
          } else {
            this.TaxableAmount = in.readDouble();
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CGST = null;
          } else {
            this.CGST = in.readDouble();
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SGST = null;
          } else {
            this.SGST = in.readInt();
          }
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CESS = null;
          } else {
            this.CESS = in.readString(this.CESS instanceof Utf8 ? (Utf8)this.CESS : null);
          }
          break;

        case 10:
          if (in.readIndex() != 1) {
            in.readNull();
            this.StoreID = null;
          } else {
            this.StoreID = in.readString(this.StoreID instanceof Utf8 ? (Utf8)this.StoreID : null);
          }
          break;

        case 11:
          if (in.readIndex() != 1) {
            in.readNull();
            this.PosID = null;
          } else {
            this.PosID = in.readString(this.PosID instanceof Utf8 ? (Utf8)this.PosID : null);
          }
          break;

        case 12:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CashierID = null;
          } else {
            this.CashierID = in.readDouble();
          }
          break;

        case 13:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CustomerType = null;
          } else {
            this.CustomerType = in.readInt();
          }
          break;

        case 14:
          if (in.readIndex() != 1) {
            in.readNull();
            this.DeliveryType = null;
          } else {
            this.DeliveryType = in.readString(this.DeliveryType instanceof Utf8 ? (Utf8)this.DeliveryType : null);
          }
          break;

        case 15:
          if (in.readIndex() != 1) {
            in.readNull();
            this.DeliveryAddress = null;
          } else {
            if (this.DeliveryAddress == null) {
              this.DeliveryAddress = new DeliveryAddress();
            }
            this.DeliveryAddress.customDecode(in);
          }
          break;

        case 16:
          long size0 = in.readArrayStart();
          java.util.List<LineItem> a0 = this.InvoiceLineItems;
          if (a0 == null) {
            a0 = new SpecificData.Array<LineItem>((int)size0, SCHEMA$.getField("InvoiceLineItems").schema());
            this.InvoiceLineItems = a0;
          } else a0.clear();
          SpecificData.Array<LineItem> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<LineItem>)a0 : null);
          for ( ; 0 < size0; size0 = in.arrayNext()) {
            for ( ; size0 != 0; size0--) {
              LineItem e0 = (ga0 != null ? ga0.peek() : null);
              if (e0 == null) {
                e0 = new LineItem();
              }
              e0.customDecode(in);
              a0.add(e0);
            }
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










